<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>startGame = false;

numberOfPlayersPerTeam = 8;
startKey = vk_space;

titleText = "Senior Sea Wars";
titleWhackOut = false;
whackOutTime = room_speed * 3;
alarm[0] = whackOutTime;

buttonText[1] = "Play";
buttonText[2] = "Options";
buttonText[3] = "Credits";
buttonText[4] = "Tutorial";
buttonText[5] = "Quit";
numberOfButtons = 5;

selected = 1;
counter = 0;

// if there is no settings file, make one!

if(!file_exists("arrrg.ini")){
    ini_open("arrrg.ini");
    
    //ini_write_real("") POPULATE :)
    
    ini_close();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!titleWhackOut){
    titleWhackOut = true;
}
else if(titleWhackOut){
    titleWhackOut = false;
}

alarm[0] = whackOutTime;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Easter Eggs
counter++;
if(counter == room_speed * 60){

    with(instance_create(x,y,obj_Message)){
    
        text = "The Eternal Struggle...";
        time = 5;
    
    }

}

if(counter == room_speed * 75){

    with(instance_create(x,y,obj_Message)){
    
        text = "For...";
        time = 5;
    
    }

}

if(counter == room_speed * 85){

    with(instance_create(x,y,obj_Message)){
    
        text = "The...";
        time = 5;
    
    }

}

if(counter == room_speed * 90){

    with(instance_create(x,y,obj_Message)){
    
        text = "Dude,";
        time = 1;
    
    }

}

if(counter == room_speed * 91){

    with(instance_create(x,y,obj_Message)){
    
        text = "There's no story! :P";
        time = 5;
    
    }

}

//Entering Real Stuff

if(keyboard_check(startKey)){

    switch(selected){
    
        case 1:
            startGame = true;
        break;
        case 2:
            with(instance_create(x,y,obj_Message)){
                text = "Nothing here yet!";
            }
        break;
        case 3:
            with(instance_create(x,y,obj_Message)){
                text = "A big shout out to Michael's cat";
            }
        break;
    
    }
    
    

}

if(startGame){

    control.gameState = 1;
    room_goto_next();

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(font_Game);
draw_set_halign(fa_left);

//Main Title

draw_set_colour(c_black);
draw_rectangle(view_xview,(view_yview),view_xview+view_wview,(view_yview)+30,0);

if(titleWhackOut){

draw_set_colour(c_yellow);
draw_text(view_xview[0]+irandom_range(-4,4)+5,view_yview[0]+random_range(-4,4),titleText);
draw_set_colour(c_white);
draw_text(view_xview[0]+irandom_range(-2,2)+5,view_yview[0]+random_range(-2,2),titleText);
draw_set_colour(c_blue);
draw_text(view_xview[0]+5,view_yview[0],titleText);

}

if(!titleWhackOut){
    draw_set_colour(c_blue);
    draw_text(view_xview[0]+5,view_yview[0],titleText);
}

//buttons

if(selected == 1){

draw_set_colour(c_yellow);
draw_text(view_xview[0]+irandom_range(-4,4)+5,view_yview[0]+random_range(-4,4)+40+200,buttonText[1]);
draw_set_colour(c_white);
draw_text(view_xview[0]+irandom_range(-2,2)+5,view_yview[0]+random_range(-2,2)+40+200,buttonText[1]);
draw_set_colour(c_blue);
draw_text(view_xview[0]+5,view_yview[0]+40+200,buttonText[1]);

}

else{

    draw_set_colour(c_blue);
    draw_text(view_xview[0]+5,view_yview[0]+40+200,buttonText[1]);

}

if(selected == 2){

draw_set_colour(c_yellow);
draw_text(view_xview[0]+irandom_range(-4,4)+5,view_yview[0]+random_range(-4,4)+64+200,buttonText[2]);
draw_set_colour(c_white);
draw_text(view_xview[0]+irandom_range(-2,2)+5,view_yview[0]+random_range(-2,2)+64+200,buttonText[2]);
draw_set_colour(c_blue);
draw_text(view_xview[0]+5,view_yview[0]+64+200,buttonText[2]);

}

else{

    draw_set_colour(c_blue);
    draw_text(view_xview[0]+5,view_yview[0]+64+200,buttonText[2]);

}

if(selected == 3){

draw_set_colour(c_yellow);
draw_text(view_xview[0]+irandom_range(-4,4)+5,view_yview[0]+random_range(-4,4)+88+200,buttonText[3]);
draw_set_colour(c_white);
draw_text(view_xview[0]+irandom_range(-2,2)+5,view_yview[0]+random_range(-2,2)+88+200,buttonText[3]);
draw_set_colour(c_blue);
draw_text(view_xview[0]+5,view_yview[0]+88+200,buttonText[3]);

}

else{

    draw_set_colour(c_blue);
    draw_text(view_xview[0]+5,view_yview[0]+88+200,buttonText[3]);

}

if(selected == 4){

draw_set_colour(c_yellow);
draw_text(view_xview[0]+irandom_range(-4,4)+5,view_yview[0]+random_range(-4,4)+112+200,buttonText[4]);
draw_set_colour(c_white);
draw_text(view_xview[0]+irandom_range(-2,2)+5,view_yview[0]+random_range(-2,2)+112+200,buttonText[4]);
draw_set_colour(c_blue);
draw_text(view_xview[0]+5,view_yview[0]+112+200,buttonText[4]);

}

else{

    draw_set_colour(c_blue);
    draw_text(view_xview[0]+5,view_yview[0]+112+200,buttonText[4]);

}


if(selected == 5){

draw_set_colour(c_yellow);
draw_text(view_xview[0]+irandom_range(-4,4)+5,view_yview[0]+random_range(-4,4)+136+200,buttonText[5]);
draw_set_colour(c_white);
draw_text(view_xview[0]+irandom_range(-2,2)+5,view_yview[0]+random_range(-2,2)+136+200,buttonText[5]);
draw_set_colour(c_blue);
draw_text(view_xview[0]+5,view_yview[0]+136+200,buttonText[5]);

}

else{

    draw_set_colour(c_blue);
    draw_text(view_xview[0]+5,view_yview[0]+136+200,buttonText[5]);

}

////////// fx

scale = choose(1,1,1,1,1,1,1,1,1,1,3,3,10)
draw_set_colour(c_white);
draw_sprite_ext(choose(spr_Boxer,spr_Weak,spr_DeVuto,spr_Blob,spr_GobShark,spr_Crab),0,random(view_wview[0]),random(view_hview[0]),scale,scale,counter mod 360, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>selected++;

if(selected &gt; numberOfButtons){

    selected = 1;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>selected--;

if(selected &lt; 1){

    selected = numberOfButtons;

}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
